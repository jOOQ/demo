/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.routines


import java.lang.String

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.demo.skala.db.Public
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


object _GroupConcat {

  /**
   * The parameter <code>public._group_concat.RETURN_VALUE</code>.
   */
  val RETURN_VALUE: Parameter[String] = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false)

  /**
   * The parameter <code>public._group_concat._1</code>.
   */
  val _1: Parameter[String] = Internal.createParameter("_1", SQLDataType.CLOB, false, true)

  /**
   * The parameter <code>public._group_concat._2</code>.
   */
  val _2: Parameter[String] = Internal.createParameter("_2", SQLDataType.CLOB, false, true)
}

/**
 * This class is generated by jOOQ.
 */
class _GroupConcat extends AbstractRoutine[String]("_group_concat", Public.PUBLIC, DSL.comment(""), SQLDataType.CLOB) {
  {
    setReturnParameter(_GroupConcat.RETURN_VALUE)
    addInParameter(_GroupConcat._1)
    addInParameter(_GroupConcat._2)
  }

  /**
   * Set the <code>_1</code> parameter IN value to the routine
   */
  def set__1(value: String) : Unit = setValue(_GroupConcat._1, value)

  /**
   * Set the <code>_1</code> parameter to the function to be used with a {@link
   * org.jooq.Select} statement
   */
  def set__1(field: Field[String]): Unit = {
    setField(_GroupConcat._1, field)
  }

  /**
   * Set the <code>_2</code> parameter IN value to the routine
   */
  def set__2(value: String) : Unit = setValue(_GroupConcat._2, value)

  /**
   * Set the <code>_2</code> parameter to the function to be used with a {@link
   * org.jooq.Select} statement
   */
  def set__2(field: Field[String]): Unit = {
    setField(_GroupConcat._2, field)
  }
}
