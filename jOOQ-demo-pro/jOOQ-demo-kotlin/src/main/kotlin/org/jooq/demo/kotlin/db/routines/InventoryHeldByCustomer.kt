/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.kotlin.db.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.demo.kotlin.db.Public
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class InventoryHeldByCustomer : AbstractRoutine<Int>("inventory_held_by_customer", Public.PUBLIC, DSL.comment(""), SQLDataType.INTEGER) {
    companion object {

        /**
         * The parameter
         * <code>public.inventory_held_by_customer.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Int?> = Internal.createParameter("RETURN_VALUE", SQLDataType.INTEGER, false, false)

        /**
         * The parameter
         * <code>public.inventory_held_by_customer.p_inventory_id</code>.
         */
        val P_INVENTORY_ID: Parameter<Long?> = Internal.createParameter("p_inventory_id", SQLDataType.BIGINT, false, false)
    }

    init {
        returnParameter = InventoryHeldByCustomer.RETURN_VALUE
        addInParameter(InventoryHeldByCustomer.P_INVENTORY_ID)
    }

    /**
     * Set the <code>p_inventory_id</code> parameter IN value to the routine
     */
    fun setPInventoryId(value: Long?): Unit = setValue(InventoryHeldByCustomer.P_INVENTORY_ID, value)

    /**
     * Set the <code>p_inventory_id</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setPInventoryId(field: Field<Long?>): Unit {
        setField(InventoryHeldByCustomer.P_INVENTORY_ID, field)
    }
}
