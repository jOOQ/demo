/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.tables.records


import java.lang.String
import java.math.BigDecimal

import org.jooq.demo.skala.db.tables.SalesByStore
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class SalesByStoreRecord extends TableRecordImpl[SalesByStoreRecord](SalesByStore.SALES_BY_STORE) {

  /**
   * Setter for <code>public.sales_by_store.store</code>.
   */
  def setStore(value: String): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.sales_by_store.store</code>.
   */
  def getStore: String = get(0).asInstanceOf[String]

  /**
   * Setter for <code>public.sales_by_store.manager</code>.
   */
  def setManager(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.sales_by_store.manager</code>.
   */
  def getManager: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>public.sales_by_store.total_sales</code>.
   */
  def setTotalSales(value: BigDecimal): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.sales_by_store.total_sales</code>.
   */
  def getTotalSales: BigDecimal = get(2).asInstanceOf[BigDecimal]

  /**
   * Create a detached, initialised SalesByStoreRecord
   */
  def this(store : String, manager : String, totalSales : BigDecimal) = {
    this()

    this.setStore(store)
    this.setManager(manager)
    this.setTotalSales(totalSales)
    resetTouchedOnNotNull()
  }

  /**
   * Create a detached, initialised SalesByStoreRecord
   */
  def this(value: org.jooq.demo.skala.db.tables.pojos.SalesByStore) = {
    this()

    if (value != null) {
      this.setStore(value.getStore)
      this.setManager(value.getManager)
      this.setTotalSales(value.getTotalSales)
      resetTouchedOnNotNull()
    }
  }
}
