<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-demo</artifactId>
        <version>3.20.1</version>
    </parent>

    <artifactId>jooq-demo-kotlin</artifactId>
    <name>jOOQ Demo Kotlin (Open Source Edition)</name>

    <dependencies>

        <!-- Demo utilities -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-demo-utils</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>

        <!-- Kotlin -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-kotlin-coroutines</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>1.6.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>add-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/kotlin</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/kotlin</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/main/java</source>
                                <source>src/main/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/src/test/java</source>
                                <source>src/src/test/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Much better if there was a testcontainers lifecycle management plugin!
                 Upvote here if you like the idea: https://github.com/testcontainers/testcontainers-java/issues/4397 -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>

                <!-- More shared defaults are defined in the parent pom.xml -->
                <configuration>
                    <generator>
                        <name>org.jooq.codegen.KotlinGenerator</name>
                        <target>
                            <!-- We're version controlling the source code for better documentation on github, etc.
                                 This isn't necessary, though, see also:
                                 https://www.jooq.org/doc/latest/manual/code-generation/codegen-version-control/ -->
                            <directory>src/main/kotlin</directory>
                        </target>
                    </generator>
                </configuration>

                <executions>
                    <execution>
                        <id>generate-demo-kotlin</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generator>
                                <database>
                                    <forcedTypes>

                                        <!-- Virtual client side computed columns are client side computed columns that are
                                             based on synthetic column declarations (see above)

                                             See: https://www.jooq.org/doc/latest/manual/code-generation/codegen-advanced/codegen-config-database/codegen-database-forced-types/codegen-database-forced-types-computed/
                                             -->
                                        <forcedType>
                                            <generator>{ ctx -> DSL.concat(FIRST_NAME, DSL.inline(" "), LAST_NAME) }</generator>
                                            <includeExpression>full_name</includeExpression>
                                        </forcedType>
                                        <forcedType>
                                            <generator>{ ctx -> DSL.concat(address.ADDRESS_, DSL.inline(", "), address.POSTAL_CODE, DSL.inline(", "), address.city.CITY_, DSL.inline(", "), address.city.country.COUNTRY_) }</generator>
                                            <includeExpression>full_address</includeExpression>
                                        </forcedType>
                                    </forcedTypes>
                                </database>

                                <target>
                                    <packageName>org.jooq.demo.kotlin.db</packageName>
                                </target>
                            </generator>
                        </configuration>
                    </execution>

                    <execution>
                        <id>generate-demo-kotlin-ddl</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generator>
                                <database>
                                    <!-- The DDLDatabase simulates your database migrations and generates code from
                                         this simulation without connecting to an actual database instance. Use this
                                         to speed up code generation, if you're not using too many vendor specific features.

                                         More info: https://www.jooq.org/doc/latest/manual/code-generation/codegen-ddl/ -->
                                    <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
                                    <properties>
                                        <property>

                                            <!-- Alternatively, use scripts to reference your DDL scripts on the file system -->
                                            <key>sql</key>
                                            <value>
                                                CREATE TABLE parent (parent_id int primary key, val int);
                                                CREATE TABLE child (child_id int primary key, parent_id int references parent, val int);
                                            </value>
                                        </property>
                                    </properties>
                                </database>
                                <target>
                                    <packageName>org.jooq.demo.kotlin.ddl</packageName>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>

                    <!-- This is needed for the DDLDatabase -->
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>